import logging
import sys
from logging.handlers import RotatingFileHandler
from config import LOG_LEVEL, LOG_FORMAT, LOG_FILE, LOG_MAX_SIZE, LOG_BACKUP_COUNT

def setup_logging():
    log_level = getattr(logging, LOG_LEVEL.upper(), logging.INFO)
    handlers = []
    console_handler = logging.StreamHandler()
    console_handler.setFormatter(logging.Formatter(LOG_FORMAT))
    handlers.append(console_handler)
    if LOG_FILE:
        file_handler = RotatingFileHandler(
            LOG_FILE,
            maxBytes=LOG_MAX_SIZE,
            backupCount=LOG_BACKUP_COUNT
        )
        file_handler.setFormatter(logging.Formatter(LOG_FORMAT))
        handlers.append(file_handler)
    logging.basicConfig(level=log_level, handlers=handlers, format=LOG_FORMAT)

def check_dependencies():
    required_packages = ['aiohttp', 'sqlite3']
    optional_packages = {'playsound': False}  # SOUND_NOTIFICATIONS –æ—Ç–∫–ª—é—á–µ–Ω
    missing_required = []
    missing_optional = []
    for package in required_packages:
        try:
            __import__(package)
        except ImportError:
            missing_required.append(package)
    for package, needed in optional_packages.items():
        if needed:
            try:
                __import__(package)
            except ImportError:
                missing_optional.append(package)
    if missing_required:
        logging.critical(f"–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–∞–∫–µ—Ç—ã: {missing_required}")
        logging.critical("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏—Ö: pip install aiohttp")
        return False
    if missing_optional:
        logging.warning(f"–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–∞–∫–µ—Ç—ã: {missing_optional}")
        logging.warning("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏—Ö: pip install playsound")
    return True

def print_startup_info():
    from config import MIN_PROFIT_THRESHOLD, TRADING_COMMISSION, SCAN_INTERVAL, MAX_OPPORTUNITIES_DISPLAY, CROSS_CURRENCIES, LOG_LEVEL

    print("=" * 80)
    print("üöÄ –ê–†–ë–ò–¢–†–ê–ñ–ù–´–ô –ë–û–¢ BYBIT - –ó–ê–ü–£–°–ö")
    print("=" * 80)
    print(f"üìä –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–∏–±—ã–ª—å: {MIN_PROFIT_THRESHOLD}%")
    print(f"üí∞ –ö–æ–º–∏—Å—Å–∏—è —Ç–æ—Ä–≥–æ–≤: {TRADING_COMMISSION * 100}%")
    print(f"‚è±Ô∏è  –ò–Ω—Ç–µ—Ä–≤–∞–ª —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: {SCAN_INTERVAL}s")
    print(f"üî¢ –ú–∞–∫—Å–∏–º—É–º –ø–æ–∫–∞–∑—ã–≤–∞–µ–º—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π: {MAX_OPPORTUNITIES_DISPLAY}")
    print(f"üí± –ë–∞–∑–æ–≤—ã–µ –≤–∞–ª—é—Ç—ã: {', '.join(CROSS_CURRENCIES)}")
    print(f"üìù –£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è: {LOG_LEVEL}")
    print("=" * 80)
    print("üí° –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
    print("=" * 80)
