# config.py — Конфигурационные настройки для арбитражного бота Bybit
# =============================================================================
import os
from dotenv import load_dotenv

# Загружаем переменные окружения из файла .env
load_dotenv()

# =============================================================================
# ОСНОВНЫЕ НАСТРОЙКИ ТОРГОВЛИ - ОПТИМИЗИРОВАНО ДЛЯ БЫСТРОГО СКАНИРОВАНИЯ
# =============================================================================
MIN_PROFIT_THRESHOLD = 0.001  # СНИЖЕНО: 0.01% для поиска минимальных возможностей
TRADING_COMMISSION = 0.001  # Комиссия Bybit 0.1%
INITIAL_AMOUNT = 1000.0  # УВЕЛИЧЕНО: для более точных расчетов больших арбитражей
MAX_OPPORTUNITIES_DISPLAY = 50  # СНИЖЕНО: для быстрого вывода

# =============================================================================
# НАСТРОЙКИ API И ПОДКЛЮЧЕНИЯ - ОПТИМИЗИРОВАНО
# =============================================================================
BYBIT_BASE_URL = "https://api.bybit.com/v5"
HTTP_TIMEOUT = 3  # СНИЖЕНО: для быстрых ответов
API_RETRY_ATTEMPTS = 2  # СНИЖЕНО: меньше повторов
API_RETRY_DELAY = 0.05  # ЗНАЧИТЕЛЬНО СНИЖЕНО: быстрее повторяем запросы

# =============================================================================
# НАСТРОЙКИ API КЛЮЧЕЙ ДЛЯ РЕАЛЬНОЙ ТОРГОВЛИ
# =============================================================================
API_KEY = os.getenv("API_KEY")
API_SECRET = os.getenv("API_SECRET")
API_TESTNET = False
TESTNET_BASE_URL = "https://api-testnet.bybit.com/v5"

# =============================================================================
# ВРЕМЕННЫЕ ИНТЕРВАЛЫ - БЫСТРЫЕ НАСТРОЙКИ
# =============================================================================
SCAN_INTERVAL = 1.0  # УВЕЛИЧЕНО: даем время на выполнение
ERROR_RETRY_INTERVAL = 0.5  # Быстро восстанавливаемся после ошибок
ORDERBOOK_TIMEOUT = 2  # СНИЖЕНО: быстрее получаем данные

# =============================================================================
# НАСТРОЙКИ ПРОИЗВОДИТЕЛЬНОСТИ И ТАЙМАУТОВ - НОВЫЕ
# =============================================================================
# Максимальное время выполнения операций (в секундах)
MAX_FULL_SCAN_TIME = 5.0  # Максимальное время полного цикла сканирования
MAX_ORDERBOOK_LOAD_TIME = 3.0  # Максимальное время загрузки всех стаканов
MAX_ANALYSIS_TIME = 1.5  # Максимальное время анализа возможностей
MAX_PATH_SEARCH_TIME = 0.5  # Максимальное время поиска путей

# Адаптивные лимиты производительности
INITIAL_MAX_PAIRS_TO_LOAD = 80  # СНИЖЕНО: начальное количество пар для загрузки
INITIAL_MAX_PATHS_TO_ANALYZE = 300  # СНИЖЕНО: начальное количество путей для анализа
MIN_PAIRS_TO_LOAD = 20  # Минимум пар для анализа
MAX_PAIRS_TO_LOAD = 150  # Максимум пар для анализа
MIN_PATHS_TO_ANALYZE = 50  # Минимум путей для анализа
MAX_PATHS_TO_ANALYZE = 800  # Максимум путей для анализа

# Настройки автоматической адаптации
AUTO_ADAPT_PERFORMANCE = True  # Автоматически адаптировать производительность
PERFORMANCE_TARGET_TIME = 4.0  # Целевое время сканирования
PERFORMANCE_ADAPT_THRESHOLD = 1.5  # Порог для адаптации (отклонение от целевого времени)

# =============================================================================
# ВАЛЮТНЫЕ ПАРЫ - ОПТИМИЗИРОВАННЫЙ СПИСОК ДЛЯ БЫСТРОГО СКАНИРОВАНИЯ
# =============================================================================
CROSS_CURRENCIES = [
    # Стейблкоины (основа арбитража) - ПРИОРИТЕТ
    'USDT', 'USDC', 'BUSD', 'FDUSD',

    # Топ криптовалюты (высокая ликвидность) - ПРИОРИТЕТ
    'BTC', 'ETH', 'BNB', 'SOL', 'XRP', 'ADA', 'DOGE', 'TRX', 'MATIC', 'AVAX',
    'DOT', 'LTC', 'LINK', 'ATOM', 'NEAR', 'UNI', 'AAVE',

    # Популярные альткоины - СРЕДНИЙ ПРИОРИТЕТ
    'FTM', 'ALGO', 'MANA', 'SAND', 'GRT', 'CRV', 'MKR', 'COMP', 'SNX',
    'SUSHI', 'BAT', 'ENJ', 'LRC', 'STORJ',

    # Мем токены и новые проекты - НИЗКИЙ ПРИОРИТЕТ
    'SHIB', 'PEPE', 'FLOKI', 'WIF', 'BONK',

    # Layer 2 решения
    'ARB', 'OP', 'IMX',

    # AI и DeFi
    'FET', 'RNDR', 'CAKE', '1INCH'
]

# Исключения - минимальный список
EXCLUDED_CURRENCIES = [
    'PAXG', 'TUSD', 'USDD'  # Проблемные стейблкоины
]

MIN_LIQUIDITY_VOLUME = 15  # СНИЖЕНО: для большего покрытия

# =============================================================================
# НАСТРОЙКИ ЛОГИРОВАНИЯ - ОПТИМИЗИРОВАННЫЕ
# =============================================================================
LOG_LEVEL = "INFO"  # ИЗМЕНЕНО: меньше отладочной информации для производительности
LOG_FORMAT = "%(asctime)s [%(levelname)8s] %(name)s: %(message)s"
LOG_FILE = "arbitrage_fast.log"
LOG_MAX_SIZE = 50 * 1024 * 1024  # СНИЖЕНО: 50MB
LOG_BACKUP_COUNT = 5  # СНИЖЕНО: меньше файлов
LOG_ENCODING = "utf-8"

# =============================================================================
# ПРОДВИНУТЫЕ НАСТРОЙКИ - БЫСТРЫЕ
# =============================================================================
USE_ORDERBOOK_CACHE = True  # ВКЛЮЧЕНО: для производительности
ORDERBOOK_CACHE_TTL = 0.5  # СНИЖЕНО: быстрое обновление кеша
MAX_CONCURRENT_REQUESTS = 60  # СНИЖЕНО: безопасное значение для стабильности
PERFORMANCE_DIAGNOSTICS = True

# =============================================================================
# ФИЛЬТРАЦИЯ - ОПТИМИЗИРОВАННАЯ
# =============================================================================
FILTER_LOW_LIQUIDITY = True
MAX_SPREAD_PERCENT = 10.0  # СНИЖЕНО: более строгие требования
EXCLUDE_HIGH_VOLATILITY = False
MAX_VOLATILITY_PERCENT = 50.0  # СНИЖЕНО: исключаем слишком волатильные пары

# =============================================================================
# СЕТЕВЫЕ НАСТРОЙКИ - БЫСТРЫЕ
# =============================================================================
API_RATE_LIMIT = 120  # СНИЖЕНО: 2 запроса в секунду для стабильности
SSL_VERIFY = True
NETWORK_TIMEOUT = 8  # СНИЖЕНО: быстрее получаем ответы

# =============================================================================
# НАСТРОЙКИ АВТОНОМНОЙ ТОРГОВЛИ - ОСТОРОЖНЫЕ ЗНАЧЕНИЯ
# =============================================================================
ENABLE_LIVE_TRADING = True
LIVE_TRADING_DRY_RUN = True  # БЕЗОПАСНО: по умолчанию только симуляция

LIVE_TRADING_MAX_TRADE_USDT = 100.0  # БЕЗОПАСНОЕ ЗНАЧЕНИЕ для начала
LIVE_TRADING_MIN_TRADE_USDT = 10.0  # Минимум для Bybit

LIVE_TRADING_MAX_EXEC_PER_MIN = 15  # СНИЖЕНО: более консервативно
LIVE_TRADING_ORDER_GAP_SEC = 0.3  # УВЕЛИЧЕНО: безопасная пауза между ордерами
ALLOW_PARTIAL_FILL_EXECUTION = True
REQUIRE_BALANCE_CHECK_BEFORE_LIVE = True

# =============================================================================
# ДОПОЛНИТЕЛЬНЫЕ ПАРАМЕТРЫ БЕЗОПАСНОСТИ
# =============================================================================
SESSION_MAX_DRAWDOWN_PERCENT = 20.0  # Более консервативно
LOG_API_RESPONSES = False  # Отключаем для производительности

# =============================================================================
# НАСТРОЙКИ БЫСТРОГО СКАНИРОВАНИЯ
# =============================================================================
FAST_SCAN_MODE = True  # Новый режим быстрого сканирования
PRIORITIZE_HIGH_VOLUME_PAIRS = True  # Приоритет высоколиквидным парам
SKIP_LOW_PROFIT_ANALYSIS = True  # Пропускаем анализ заведомо неприбыльных путей

# Пороги для быстрого исключения
QUICK_PROFIT_THRESHOLD = MIN_PROFIT_THRESHOLD * 0.5  # Быстрая проверка
QUICK_SPREAD_THRESHOLD = 5.0  # Быстро исключаем пары с большим спредом

# =============================================================================
# НАСТРОЙКИ МОНИТОРИНГА ПРОИЗВОДИТЕЛЬНОСТИ
# =============================================================================
ENABLE_PERFORMANCE_MONITORING = True
PERFORMANCE_LOG_INTERVAL = 60  # Логируем производительность каждую минуту
PERFORMANCE_STATS_WINDOW = 20  # Окно для расчета средних значений

# Пороги для предупреждений о производительности
SLOW_SCAN_WARNING_THRESHOLD = 8.0  # Предупреждение если сканирование > 8с
VERY_SLOW_SCAN_THRESHOLD = 15.0  # Критическое предупреждение если > 15с

# =============================================================================
# ЭКСПЕРИМЕНТАЛЬНЫЕ НАСТРОЙКИ - ОТКЛЮЧЕНЫ ДЛЯ ПРОИЗВОДИТЕЛЬНОСТИ
# =============================================================================
EXPERIMENTAL_OPTIMIZATIONS = False  # ОТКЛЮЧЕНО: для стабильности
ML_VOLATILITY_PREDICTION = False  # ОТКЛЮЧЕНО: экономим ресурсы
ORDERBOOK_DEPTH_ANALYSIS = False  # ОТКЛЮЧЕНО: используем только топ уровень
ORDERBOOK_LEVELS = 1  # МИНИМУМ: только лучшие цены

# =============================================================================
# ПРОВЕРКА КОНФИГУРАЦИИ - РАСШИРЕННАЯ
# =============================================================================
def validate_config():
    errors = []
    warnings = []

    # Проверка торговых настроек
    if ENABLE_LIVE_TRADING and not LIVE_TRADING_DRY_RUN:
        if not API_KEY or not API_SECRET:
            errors.append("❌ Для реальной торговли необходимы API_KEY и API_SECRET")

        if API_TESTNET:
            warnings.append("🧪 Используется тестовая сеть (безопасно)")
        else:
            warnings.append("⚠️ РЕАЛЬНАЯ ТОРГОВЛЯ ВКЛЮЧЕНА! Будьте осторожны!")

    # Проверка размеров сделок
    if LIVE_TRADING_MAX_TRADE_USDT > 500:
        warnings.append(f"💰 Большой размер сделки: ${LIVE_TRADING_MAX_TRADE_USDT}")

    # Проверка производительности
    if MAX_FULL_SCAN_TIME > 10:
        warnings.append("⏰ Большой таймаут сканирования - возможны задержки")

    if SCAN_INTERVAL < MAX_FULL_SCAN_TIME:
        warnings.append("🔄 Интервал сканирования меньше максимального времени сканирования")

    # Проверка прибыльности
    if MIN_PROFIT_THRESHOLD < TRADING_COMMISSION * 3:
        warnings.append("📉 Порог прибыли может быть слишком низким из-за комиссий")

    # Проверка ликвидности
    if MIN_LIQUIDITY_VOLUME < LIVE_TRADING_MIN_TRADE_USDT:
        warnings.append("💧 MIN_LIQUIDITY_VOLUME меньше мин. суммы сделки")

    # Позитивная информация о быстрых настройках
    info_messages = []

    if MAX_FULL_SCAN_TIME <= 5.0:
        info_messages.append(f"⚡ Быстрое сканирование: максимум {MAX_FULL_SCAN_TIME}s")

    if INITIAL_MAX_PAIRS_TO_LOAD <= 100:
        info_messages.append(f"🎯 Оптимизированная нагрузка: {INITIAL_MAX_PAIRS_TO_LOAD} пар")

    if AUTO_ADAPT_PERFORMANCE:
        info_messages.append("🧠 Автоматическая адаптация производительности включена")

    if FAST_SCAN_MODE:
        info_messages.append("🚀 Режим быстрого сканирования активен")

    return errors, warnings, info_messages


# =============================================================================
# УТИЛИТЫ ДЛЯ БЫСТРОГО РЕЖИМА
# =============================================================================

def get_fast_config_summary():
    """Возвращает сводку настроек быстрого режима"""
    return {
        "max_scan_time": f"{MAX_FULL_SCAN_TIME}s",
        "max_pairs_to_load": INITIAL_MAX_PAIRS_TO_LOAD,
        "max_paths_to_analyze": INITIAL_MAX_PATHS_TO_ANALYZE,
        "scan_interval": f"{SCAN_INTERVAL}s",
        "profit_threshold": f"{MIN_PROFIT_THRESHOLD}%",
        "currency_pairs": len(CROSS_CURRENCIES),
        "max_concurrent": MAX_CONCURRENT_REQUESTS,
        "cache_ttl": f"{ORDERBOOK_CACHE_TTL}s",
        "trading_mode": "DRY RUN" if LIVE_TRADING_DRY_RUN else ("TESTNET" if API_TESTNET else "LIVE"),
        "fast_mode": FAST_SCAN_MODE,
        "auto_adapt": AUTO_ADAPT_PERFORMANCE
    }


def print_fast_mode_info():
    """Выводит информацию о быстром режиме"""
    print("⚡" + "=" * 78 + "⚡")
    print("🚀 БЫСТРЫЙ РЕЖИМ СКАНИРОВАНИЯ АКТИВИРОВАН 🚀")
    print("⚡" + "=" * 78 + "⚡")
    print("🎯 Настройки оптимизированы для максимальной скорости")
    print(f"⏰ Максимальное время сканирования: {MAX_FULL_SCAN_TIME}s")
    print(f"📊 Начальная нагрузка: {INITIAL_MAX_PAIRS_TO_LOAD} пар, {INITIAL_MAX_PATHS_TO_ANALYZE} путей")
    print(f"🔄 Интервал сканирования: {SCAN_INTERVAL}s")
    print(f"🎛️ Автоматическая адаптация: {'включена' if AUTO_ADAPT_PERFORMANCE else 'отключена'}")
    print(f"💾 Кеш orderbook: {ORDERBOOK_CACHE_TTL}s")
    print("⚡" + "=" * 78 + "⚡")